---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      config.openshift.io/inject-proxy: authentication-operator
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      exclude.release.openshift.io/internal-openshift-hosted: "true"
      include.release.openshift.io/self-managed-high-availability: "true"
      include.release.openshift.io/single-node-developer: "true"
    creationTimestamp: "2024-10-24T12:58:57Z"
    generation: 1
    labels:
      app: authentication-operator
      pod-template-hash: 7b558f58f9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:config.openshift.io/inject-proxy: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:exclude.release.openshift.io/internal-openshift-hosted: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
            f:include.release.openshift.io/single-node-developer: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e759e0c1-13df-4a89-b24e-d61100b93122"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:containers:
                k:{"name":"authentication-operator"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"IMAGE_OAUTH_APISERVER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"IMAGE_OAUTH_SERVER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERAND_OAUTH_SERVER_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/service-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"service-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T12:58:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:04:51Z"
    name: authentication-operator-7b558f58f9
    namespace: openshift-authentication-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: authentication-operator
      uid: e759e0c1-13df-4a89-b24e-d61100b93122
    resourceVersion: "10472"
    uid: 9cc49a8e-76b0-4caf-918b-b06c13841c42
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: authentication-operator
        pod-template-hash: 7b558f58f9
    template:
      metadata:
        annotations:
          openshift.io/required-scc: anyuid
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: authentication-operator
          pod-template-hash: 7b558f58f9
        name: authentication-operator
      spec:
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then
                echo "Copying system trust bundle"
                cp -f /var/run/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec authentication-operator operator --config=/var/run/configmaps/config/operator-config.yaml --v=2 --terminate-on-files=/var/run/configmaps/trusted-ca-bundle/ca-bundle.crt --terminate-on-files=/tmp/terminate
          command:
          - /bin/bash
          - -ec
          env:
          - name: IMAGE_OAUTH_SERVER
            value: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:770cd3540e204f7a7bea6cd19d18e7f28e0891e8b7bc5eb4275e20ab45822564
          - name: IMAGE_OAUTH_APISERVER
            value: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4b5eb36759d58a301131bbcac37a0fcb2796226636668c66462fed20710d4a1c
          - name: OPERATOR_IMAGE_VERSION
            value: 4.18.0-0.ci.test-2024-10-24-124520-ci-op-2fcpj5j6-latest
          - name: OPERAND_OAUTH_SERVER_IMAGE_VERSION
            value: 4.18.0-0.ci.test-2024-10-24-124520-ci-op-2fcpj5j6-latest_openshift
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:432254b8dc65f17472fe6f9bd5a7cde177658799ebb05baede8f91ee2cd62472
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: authentication-operator
          resources:
            requests:
              cpu: 20m
              memory: 200Mi
          securityContext:
            readOnlyRootFilesystem: false
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
            readOnly: true
          - mountPath: /var/run/configmaps/service-ca-bundle
            name: service-ca-bundle
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: authentication-operator
        serviceAccountName: authentication-operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 440
            name: authentication-operator-config
          name: config
        - configMap:
            defaultMode: 420
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: serving-cert
          secret:
            defaultMode: 420
            optional: true
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            name: service-ca-bundle
            optional: true
          name: service-ca-bundle
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: ReplicaSetList
metadata:
  resourceVersion: "60520"
