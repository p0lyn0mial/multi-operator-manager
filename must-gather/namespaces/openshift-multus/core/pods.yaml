---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:15:28Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: b98f4d8bc
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"261a4267-77ed-4ee9-b71d-d1a0d97cd3eb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:19:35Z"
    name: multus-2r78s
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 261a4267-77ed-4ee9-b71d-d1a0d97cd3eb
    resourceVersion: "21578"
    uid: 4f1690b9-118c-4e8a-9e71-e2feaf0eed73
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cnhrq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: default-dockercfg-mjrgj
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-cnhrq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://def9f3d67d5d4e1b0b9eccea240bc6989015ee821a3f20b9eea567e440e4b063
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:35Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cnhrq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.3
    hostIPs:
    - ip: 10.0.128.3
    phase: Running
    podIP: 10.0.128.3
    podIPs:
    - ip: 10.0.128.3
    qosClass: Burstable
    startTime: "2024-10-24T13:16:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:02:17Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: b98f4d8bc
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"261a4267-77ed-4ee9-b71d-d1a0d97cd3eb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:03:20Z"
    name: multus-8cm87
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 261a4267-77ed-4ee9-b71d-d1a0d97cd3eb
    resourceVersion: "5336"
    uid: d5c49011-d2fb-4d1a-a301-3a5d8b400498
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-0
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mddcn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-0
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-mddcn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cd8a8e76ee19cb38e873d87fd69af83cbaa812c441b2ec6cb64d8a2eec1bcce6
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState:
        terminated:
          containerID: cri-o://462f79697c99ab397e83c5f74d6e65d1796290df3351642172584c4c97e294c0
          exitCode: 1
          finishedAt: "2024-10-24T13:03:18Z"
          message: |
            2024-10-24T13:02:33+00:00 [cnibincopy] Successfully copied files in /usr/src/multus-cni/rhel9/bin/ to /host/opt/cni/bin/upgrade_632448c5-4455-494c-8fee-4d7c0fb80d89
            2024-10-24T13:02:33+00:00 [cnibincopy] Successfully moved files in /host/opt/cni/bin/upgrade_632448c5-4455-494c-8fee-4d7c0fb80d89 to /host/opt/cni/bin/
            2024-10-24T13:02:33Z [verbose] multus-daemon started
            2024-10-24T13:02:33Z [verbose] Readiness Indicator file check
            2024-10-24T13:03:18Z [error] have you checked that your default network is ready? still waiting for readinessindicatorfile @ /host/run/multus/cni/net.d/10-ovn-kubernetes.conf. pollimmediate error: timed out waiting for the condition
          reason: Error
          startedAt: "2024-10-24T13:02:33Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:19Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mddcn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.3
    hostIPs:
    - ip: 10.0.0.3
    phase: Running
    podIP: 10.0.0.3
    podIPs:
    - ip: 10.0.0.3
    qosClass: Burstable
    startTime: "2024-10-24T13:02:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:02:17Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 7c958cbc79
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6639bfb6-04ce-4e19-993b-511b48e2d3fb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:03:01Z"
    name: multus-additional-cni-plugins-62wrg
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 6639bfb6-04ce-4e19-993b-511b48e2d3fb
    resourceVersion: "4906"
    uid: 0aa426d6-3132-41a2-ab14-f32bb11ecb27
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-1
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-qh865
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://00b4c1df5369a4997bd84fe47c0ed9ee81ed8c1c234f42e9a755a7b6bd0bad60
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:00Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.4
    hostIPs:
    - ip: 10.0.0.4
    initContainerStatuses:
    - containerID: cri-o://ec6a1f9d807dcbf8eacb8404293265a6fc91ee16f4add0714db14806777cc609
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ec6a1f9d807dcbf8eacb8404293265a6fc91ee16f4add0714db14806777cc609
          exitCode: 0
          finishedAt: "2024-10-24T13:02:25Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:25Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://c34d12c7429675803304757cc4346e16be477f83688fd6fcdce4d8189b4a7a6f
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://c34d12c7429675803304757cc4346e16be477f83688fd6fcdce4d8189b4a7a6f
          exitCode: 0
          finishedAt: "2024-10-24T13:02:35Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:35Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://715916a15854e45228d79cc5feda05ad1637ad76061001846569f7614c68b187
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://715916a15854e45228d79cc5feda05ad1637ad76061001846569f7614c68b187
          exitCode: 0
          finishedAt: "2024-10-24T13:02:45Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:45Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://99fff431cae5241725317633aa08c17c8acb18ace9d48ab6065c07997364fca1
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:5fcdeb7bbe5cb6b038d339b3b719ada00f88ed459e6b7f4821c9b0a37239f977
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://99fff431cae5241725317633aa08c17c8acb18ace9d48ab6065c07997364fca1
          exitCode: 0
          finishedAt: "2024-10-24T13:02:50Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:50Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://bb74b13eb10d968389ef1cd1c2b4149be2533fbf69b4b6c73c42031e1add0a6f
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://bb74b13eb10d968389ef1cd1c2b4149be2533fbf69b4b6c73c42031e1add0a6f
          exitCode: 0
          finishedAt: "2024-10-24T13:02:59Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:58Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://921be5c25624a8e696eea8b30e66d730c683d2c80080115d809b1d49a707af3b
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://921be5c25624a8e696eea8b30e66d730c683d2c80080115d809b1d49a707af3b
          exitCode: 0
          finishedAt: "2024-10-24T13:02:59Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:59Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qh865
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.0.4
    podIPs:
    - ip: 10.0.0.4
    qosClass: Burstable
    startTime: "2024-10-24T13:02:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:14:05Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 7c958cbc79
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6639bfb6-04ce-4e19-993b-511b48e2d3fb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:14:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.2"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:15:33Z"
    name: multus-additional-cni-plugins-98wpj
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 6639bfb6-04ce-4e19-993b-511b48e2d3fb
    resourceVersion: "20215"
    uid: 500367c4-25d2-48e0-99cd-a2de6947ae9a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: multus-ancillary-tools-dockercfg-xqf44
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-df7n2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8a51d42dca14ac22af217a3756e50e4633c2591f6863950a44728c0532a874c3
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:15:32Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.2
    hostIPs:
    - ip: 10.0.128.2
    initContainerStatuses:
    - containerID: cri-o://6434eb4a7fbc2c7e45e1559314f472cd2b2fd9e913ca20dccde212c8a4e11d2d
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6434eb4a7fbc2c7e45e1559314f472cd2b2fd9e913ca20dccde212c8a4e11d2d
          exitCode: 0
          finishedAt: "2024-10-24T13:14:57Z"
          reason: Completed
          startedAt: "2024-10-24T13:14:57Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://e02f3d823732185d6db1d0856b1a337177644b0a54e8df2671ca379bdd3a4385
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e02f3d823732185d6db1d0856b1a337177644b0a54e8df2671ca379bdd3a4385
          exitCode: 0
          finishedAt: "2024-10-24T13:15:06Z"
          reason: Completed
          startedAt: "2024-10-24T13:15:06Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://97040bebb459ce83b5098722187094466e70fa0ab34fa92ae152fb5e00b54984
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://97040bebb459ce83b5098722187094466e70fa0ab34fa92ae152fb5e00b54984
          exitCode: 0
          finishedAt: "2024-10-24T13:15:12Z"
          reason: Completed
          startedAt: "2024-10-24T13:15:12Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://8b78d4aff1bb7aa87c0d352c39e1aeacde2ddcf3d027daefdea0d405cabdceca
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:5fcdeb7bbe5cb6b038d339b3b719ada00f88ed459e6b7f4821c9b0a37239f977
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://8b78d4aff1bb7aa87c0d352c39e1aeacde2ddcf3d027daefdea0d405cabdceca
          exitCode: 0
          finishedAt: "2024-10-24T13:15:19Z"
          reason: Completed
          startedAt: "2024-10-24T13:15:19Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://7817b9bee46ab439177ae1babcefa97993a9b3c0d0483e5f8c4289f32aae2c01
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7817b9bee46ab439177ae1babcefa97993a9b3c0d0483e5f8c4289f32aae2c01
          exitCode: 0
          finishedAt: "2024-10-24T13:15:31Z"
          reason: Completed
          startedAt: "2024-10-24T13:15:31Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://bf43f41626e5d536038bb38a54469a6b442f249f3a95da3b657ddf141db10424
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://bf43f41626e5d536038bb38a54469a6b442f249f3a95da3b657ddf141db10424
          exitCode: 0
          finishedAt: "2024-10-24T13:15:31Z"
          reason: Completed
          startedAt: "2024-10-24T13:15:31Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-df7n2
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.128.2
    podIPs:
    - ip: 10.0.128.2
    qosClass: Burstable
    startTime: "2024-10-24T13:14:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:02:17Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 7c958cbc79
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6639bfb6-04ce-4e19-993b-511b48e2d3fb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:03:08Z"
    name: multus-additional-cni-plugins-g8lg9
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 6639bfb6-04ce-4e19-993b-511b48e2d3fb
    resourceVersion: "4982"
    uid: e205077c-bbf9-4fa1-a493-1249659c235a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-2
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-j2vcl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d50f3eba4f4cd675f7de9f4acc30b70088a2754ba1f41b14ecbff7b5c9d6c924
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:07Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    initContainerStatuses:
    - containerID: cri-o://4606001cf727a8555d9909971a07cd805d06799cb3a31cedb488841304a53947
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://4606001cf727a8555d9909971a07cd805d06799cb3a31cedb488841304a53947
          exitCode: 0
          finishedAt: "2024-10-24T13:02:32Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:32Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://7f19a98fa72370f17315efc37cecc74f352b709425db421e880660df4a06b188
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7f19a98fa72370f17315efc37cecc74f352b709425db421e880660df4a06b188
          exitCode: 0
          finishedAt: "2024-10-24T13:02:47Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:47Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://e636c5b416645b9d8e6e5fb2ad5735dd948d914ff2f4b313127412242c3e74d4
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e636c5b416645b9d8e6e5fb2ad5735dd948d914ff2f4b313127412242c3e74d4
          exitCode: 0
          finishedAt: "2024-10-24T13:02:51Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:51Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://7380a0e1d7450628ac9bf93fb8d31517677b294ac37ff8f13299092ad544fc92
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:5fcdeb7bbe5cb6b038d339b3b719ada00f88ed459e6b7f4821c9b0a37239f977
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7380a0e1d7450628ac9bf93fb8d31517677b294ac37ff8f13299092ad544fc92
          exitCode: 0
          finishedAt: "2024-10-24T13:02:56Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:56Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://29512ddc3d6384e143ad6be05f744c394b0783730a77420585356cf2b92465fe
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://29512ddc3d6384e143ad6be05f744c394b0783730a77420585356cf2b92465fe
          exitCode: 0
          finishedAt: "2024-10-24T13:03:06Z"
          reason: Completed
          startedAt: "2024-10-24T13:03:05Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://61fb6d50d57f5803ab1b879a35ffbd8fc7bf1f38f3132ecad7f445726cf095df
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://61fb6d50d57f5803ab1b879a35ffbd8fc7bf1f38f3132ecad7f445726cf095df
          exitCode: 0
          finishedAt: "2024-10-24T13:03:06Z"
          reason: Completed
          startedAt: "2024-10-24T13:03:06Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j2vcl
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.0.6
    podIPs:
    - ip: 10.0.0.6
    qosClass: Burstable
    startTime: "2024-10-24T13:02:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:15:23Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 7c958cbc79
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6639bfb6-04ce-4e19-993b-511b48e2d3fb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:18:58Z"
    name: multus-additional-cni-plugins-k75xr
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 6639bfb6-04ce-4e19-993b-511b48e2d3fb
    resourceVersion: "20615"
    uid: a26f1540-c190-4647-b458-b31c1218db7e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: multus-ancillary-tools-dockercfg-xqf44
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-r522k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://0b245fbf593c1b902f8dfd9779244106927ba352e973257cbe8fdf1517316b29
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:16:51Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    initContainerStatuses:
    - containerID: cri-o://278fdc3bdb01ab8731ace26bcb4769ad59d47ecade9461ac830432cedac3e8e4
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://278fdc3bdb01ab8731ace26bcb4769ad59d47ecade9461ac830432cedac3e8e4
          exitCode: 0
          finishedAt: "2024-10-24T13:16:17Z"
          reason: Completed
          startedAt: "2024-10-24T13:16:17Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://287b02d817bc9321e45fda5d172ce484977fa8d618284994ffd067f748e016bb
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://287b02d817bc9321e45fda5d172ce484977fa8d618284994ffd067f748e016bb
          exitCode: 0
          finishedAt: "2024-10-24T13:16:26Z"
          reason: Completed
          startedAt: "2024-10-24T13:16:26Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://80061bab774f9d1ad3b1aae7fb545fe441d28ab9edb30fb9a122eb59f09676e4
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://80061bab774f9d1ad3b1aae7fb545fe441d28ab9edb30fb9a122eb59f09676e4
          exitCode: 0
          finishedAt: "2024-10-24T13:16:31Z"
          reason: Completed
          startedAt: "2024-10-24T13:16:31Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://9ae5f16ef158fa2952be5bf79d477a82c30e92776b60bb9c0658f4f43f26edda
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:5fcdeb7bbe5cb6b038d339b3b719ada00f88ed459e6b7f4821c9b0a37239f977
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://9ae5f16ef158fa2952be5bf79d477a82c30e92776b60bb9c0658f4f43f26edda
          exitCode: 0
          finishedAt: "2024-10-24T13:16:39Z"
          reason: Completed
          startedAt: "2024-10-24T13:16:39Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://72c9572a8b44457d3bcf0e094628158008946034958842be98d6b1a7cf7b7948
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://72c9572a8b44457d3bcf0e094628158008946034958842be98d6b1a7cf7b7948
          exitCode: 0
          finishedAt: "2024-10-24T13:16:50Z"
          reason: Completed
          startedAt: "2024-10-24T13:16:50Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://6fd134668baecc3effef1c6ccecfbfe0ea90a0372a16e684cc2d2517cae0f304
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6fd134668baecc3effef1c6ccecfbfe0ea90a0372a16e684cc2d2517cae0f304
          exitCode: 0
          finishedAt: "2024-10-24T13:16:50Z"
          reason: Completed
          startedAt: "2024-10-24T13:16:50Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r522k
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.128.4
    podIPs:
    - ip: 10.0.128.4
    qosClass: Burstable
    startTime: "2024-10-24T13:15:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:02:17Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 7c958cbc79
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6639bfb6-04ce-4e19-993b-511b48e2d3fb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:03:05Z"
    name: multus-additional-cni-plugins-l7nh6
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 6639bfb6-04ce-4e19-993b-511b48e2d3fb
    resourceVersion: "4947"
    uid: 90004e51-0e2f-41ce-8772-7dfa7524e639
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-0
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-0
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-pphvg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://898ba78d1ac149c13a096ac03076c7ff69fccd665155c787bb8d850b089cc861
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:04Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.3
    hostIPs:
    - ip: 10.0.0.3
    initContainerStatuses:
    - containerID: cri-o://90b770c8bc874a1d89d825022357488f0272a2c87351d281c48b646fca2de2f3
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://90b770c8bc874a1d89d825022357488f0272a2c87351d281c48b646fca2de2f3
          exitCode: 0
          finishedAt: "2024-10-24T13:02:28Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:27Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://17cd0a7e8b691cd185598245b1b2509a2eb24fc6018e44e66b18307ea13eab37
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://17cd0a7e8b691cd185598245b1b2509a2eb24fc6018e44e66b18307ea13eab37
          exitCode: 0
          finishedAt: "2024-10-24T13:02:39Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:39Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://daf20398493213f140bc7b3185b0396f8713c4c1987fbccff06b25a89dcabba1
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://daf20398493213f140bc7b3185b0396f8713c4c1987fbccff06b25a89dcabba1
          exitCode: 0
          finishedAt: "2024-10-24T13:02:49Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:49Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://68a11c156f04ac46a8647800084717ab67ed6f10a731ef25f678a236b6e71391
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:5fcdeb7bbe5cb6b038d339b3b719ada00f88ed459e6b7f4821c9b0a37239f977
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://68a11c156f04ac46a8647800084717ab67ed6f10a731ef25f678a236b6e71391
          exitCode: 0
          finishedAt: "2024-10-24T13:02:54Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:53Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://31c72a4c532c0ac5a04cea4800553c270e1a14054ad6fa56afb7a4e3a470e6eb
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://31c72a4c532c0ac5a04cea4800553c270e1a14054ad6fa56afb7a4e3a470e6eb
          exitCode: 0
          finishedAt: "2024-10-24T13:03:03Z"
          reason: Completed
          startedAt: "2024-10-24T13:03:03Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://a531f1a2e0d7236bc3eb1f07487081d99d59427a55f10c34a5a0281db2496d03
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a531f1a2e0d7236bc3eb1f07487081d99d59427a55f10c34a5a0281db2496d03
          exitCode: 0
          finishedAt: "2024-10-24T13:03:03Z"
          reason: Completed
          startedAt: "2024-10-24T13:03:03Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pphvg
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.0.3
    podIPs:
    - ip: 10.0.0.3
    qosClass: Burstable
    startTime: "2024-10-24T13:02:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:15:28Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 7c958cbc79
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6639bfb6-04ce-4e19-993b-511b48e2d3fb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:22Z"
    name: multus-additional-cni-plugins-tqb4j
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 6639bfb6-04ce-4e19-993b-511b48e2d3fb
    resourceVersion: "21951"
    uid: 1fe8b00f-f91c-46b3-9d85-958874a04baa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: multus-ancillary-tools-dockercfg-xqf44
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-mvnkf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c979b75fa53b3d0172eb699db5d3cf393e7595e0163e2fd4275122099c57a566
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:20:22Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.3
    hostIPs:
    - ip: 10.0.128.3
    initContainerStatuses:
    - containerID: cri-o://ed9f3e4caf8a6ab9e2968ecf8121f82380a7b8403bcd830ba00281c66dcaa456
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ed9f3e4caf8a6ab9e2968ecf8121f82380a7b8403bcd830ba00281c66dcaa456
          exitCode: 0
          finishedAt: "2024-10-24T13:19:48Z"
          reason: Completed
          startedAt: "2024-10-24T13:19:48Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://224d3fce51b7e6dd5c93f853ccf0129244829cfa7d18cf5f53104e83cdec66d0
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://224d3fce51b7e6dd5c93f853ccf0129244829cfa7d18cf5f53104e83cdec66d0
          exitCode: 0
          finishedAt: "2024-10-24T13:19:56Z"
          reason: Completed
          startedAt: "2024-10-24T13:19:56Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://36c3aecdbcf85d62a833dd8cd9dcba48b256f8417bf515120efd1bc02c7ab899
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://36c3aecdbcf85d62a833dd8cd9dcba48b256f8417bf515120efd1bc02c7ab899
          exitCode: 0
          finishedAt: "2024-10-24T13:20:04Z"
          reason: Completed
          startedAt: "2024-10-24T13:20:04Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://e1f945588e661f7cf3340cfd42b6249dc411d4b6c886c0bbc1c335a02eabb692
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:5fcdeb7bbe5cb6b038d339b3b719ada00f88ed459e6b7f4821c9b0a37239f977
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e1f945588e661f7cf3340cfd42b6249dc411d4b6c886c0bbc1c335a02eabb692
          exitCode: 0
          finishedAt: "2024-10-24T13:20:09Z"
          reason: Completed
          startedAt: "2024-10-24T13:20:09Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://b0dffcf6931ea9203e15a88bb4cdb5c01cd167e7a0099c1c406f88538ba2af86
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b0dffcf6931ea9203e15a88bb4cdb5c01cd167e7a0099c1c406f88538ba2af86
          exitCode: 0
          finishedAt: "2024-10-24T13:20:20Z"
          reason: Completed
          startedAt: "2024-10-24T13:20:20Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://276d5bbc93455bd74521dc2dadb310e9a99a5aebf02c74975e6a6a705920f9f4
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://276d5bbc93455bd74521dc2dadb310e9a99a5aebf02c74975e6a6a705920f9f4
          exitCode: 0
          finishedAt: "2024-10-24T13:20:20Z"
          reason: Completed
          startedAt: "2024-10-24T13:20:20Z"
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvnkf
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.128.3
    podIPs:
    - ip: 10.0.128.3
    qosClass: Burstable
    startTime: "2024-10-24T13:16:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: hosted-cluster-api-access
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.49/23"],"mac_address":"0a:58:0a:81:00:31","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.0.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.49/23","gateway_ip":"10.129.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.49"
            ],
            "mac": "0a:58:0a:81:00:31",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-10-24T13:22:16Z"
    generateName: multus-admission-controller-84d87497df-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 84d87497df
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-2fcpj5j6-f6035-2lklf-master-0
      operation: Update
      subresource: status
      time: "2024-10-24T13:22:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2ad27431-3edf-401c-9845-84a35f477b3f"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:22:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-10-24T13:22:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.49"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:22:18Z"
    name: multus-admission-controller-84d87497df-2ktnx
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-84d87497df
      uid: 2ad27431-3edf-401c-9845-84a35f477b3f
    resourceVersion: "25062"
    uid: d0205c14-3ed1-4ca3-b14f-d3074afa2ef2
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=0.0.0.0 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-console,openshift-console-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-node-identity,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:cf530d75ebe9448c4a2bd7adfbd3a013ea5d8beba787d1916fe4cd502199d660
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vdxkr
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vdxkr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: multus-ac-dockercfg-9tmb7
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-0
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-vdxkr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6d2960bc292bf58e379e4026ce7cfba69aa194ed9911e7a1d4cb2b1fa3f102ce
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:22:17Z"
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vdxkr
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://42612b9c7c1ff8be0264f672d3befafb9620a9d094ce7abd9b48fc1736aae664
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:cf530d75ebe9448c4a2bd7adfbd3a013ea5d8beba787d1916fe4cd502199d660
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:a54e321491180876b6559c7c7a7647b1519c759eb74613af0144563b4f1ebbf1
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:22:17Z"
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vdxkr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.3
    hostIPs:
    - ip: 10.0.0.3
    phase: Running
    podIP: 10.129.0.49
    podIPs:
    - ip: 10.129.0.49
    qosClass: Burstable
    startTime: "2024-10-24T13:22:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: hosted-cluster-api-access
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.50/23"],"mac_address":"0a:58:0a:80:00:32","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"169.254.0.5/32","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.50/23","gateway_ip":"10.128.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.50"
            ],
            "mac": "0a:58:0a:80:00:32",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-10-24T13:22:12Z"
    generateName: multus-admission-controller-84d87497df-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 84d87497df
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-2fcpj5j6-f6035-2lklf-master-2
      operation: Update
      subresource: status
      time: "2024-10-24T13:22:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2ad27431-3edf-401c-9845-84a35f477b3f"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:22:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-10-24T13:22:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.50"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:22:16Z"
    name: multus-admission-controller-84d87497df-hgz5c
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-84d87497df
      uid: 2ad27431-3edf-401c-9845-84a35f477b3f
    resourceVersion: "24911"
    uid: 2ca0962f-f945-4097-8549-f9686cdae405
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=0.0.0.0 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-console,openshift-console-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-node-identity,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:cf530d75ebe9448c4a2bd7adfbd3a013ea5d8beba787d1916fe4cd502199d660
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxmzn
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxmzn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: multus-ac-dockercfg-9tmb7
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-2
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-fxmzn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:22:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://eae213fe46240a5c8162da3a4e11974e4884c5a60d5438e1971d1392d8f05af3
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:22:16Z"
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxmzn
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://c13d834f954dde7ae5f0266c21a858596ed9d8102539153e8d08eb5a26643455
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:cf530d75ebe9448c4a2bd7adfbd3a013ea5d8beba787d1916fe4cd502199d660
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:a54e321491180876b6559c7c7a7647b1519c759eb74613af0144563b4f1ebbf1
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:22:16Z"
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxmzn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    phase: Running
    podIP: 10.128.0.50
    podIPs:
    - ip: 10.128.0.50
    qosClass: Burstable
    startTime: "2024-10-24T13:22:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:15:23Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: b98f4d8bc
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"261a4267-77ed-4ee9-b71d-d1a0d97cd3eb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:26Z"
    name: multus-hb5v6
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 261a4267-77ed-4ee9-b71d-d1a0d97cd3eb
    resourceVersion: "21973"
    uid: 74ff244e-961b-4ce6-8f05-36d016ff13c1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bsrvq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: default-dockercfg-mjrgj
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-bsrvq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://749421fb1d3fb16944dfdd2cf86a9b3c5aafe174fd14da4bd9a5133afdf5bfee
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState:
        terminated:
          containerID: cri-o://241978b9079861b9260c3d3612f6bed0fe0cdfbc4ef2f19787f86dc37664244e
          exitCode: 1
          finishedAt: "2024-10-24T13:19:44Z"
          message: |
            2024-10-24T13:18:59+00:00 [cnibincopy] Successfully copied files in /usr/src/multus-cni/rhel9/bin/ to /host/opt/cni/bin/upgrade_f6642d41-09df-491f-9053-df76a8a0a107
            2024-10-24T13:18:59+00:00 [cnibincopy] Successfully moved files in /host/opt/cni/bin/upgrade_f6642d41-09df-491f-9053-df76a8a0a107 to /host/opt/cni/bin/
            2024-10-24T13:18:59Z [verbose] multus-daemon started
            2024-10-24T13:18:59Z [verbose] Readiness Indicator file check
            2024-10-24T13:19:44Z [error] have you checked that your default network is ready? still waiting for readinessindicatorfile @ /host/run/multus/cni/net.d/10-ovn-kubernetes.conf. pollimmediate error: timed out waiting for the condition
          reason: Error
          startedAt: "2024-10-24T13:18:59Z"
      name: kube-multus
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:20:25Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bsrvq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    phase: Running
    podIP: 10.0.128.4
    podIPs:
    - ip: 10.0.128.4
    qosClass: Burstable
    startTime: "2024-10-24T13:15:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:02:17Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: b98f4d8bc
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"261a4267-77ed-4ee9-b71d-d1a0d97cd3eb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:02:30Z"
    name: multus-r69xv
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 261a4267-77ed-4ee9-b71d-d1a0d97cd3eb
    resourceVersion: "4214"
    uid: 2631051d-00af-45e6-9dfd-4de712b26fe8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-1
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vm929
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-vm929
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:30Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://ec0f7d4de00290164e77a7703a2f6676bb119ad0c7352492cf09810e8826a531
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:30Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vm929
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.4
    hostIPs:
    - ip: 10.0.0.4
    phase: Running
    podIP: 10.0.0.4
    podIPs:
    - ip: 10.0.0.4
    qosClass: Burstable
    startTime: "2024-10-24T13:02:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:02:17Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: b98f4d8bc
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"261a4267-77ed-4ee9-b71d-d1a0d97cd3eb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:02:32Z"
    name: multus-vsdll
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 261a4267-77ed-4ee9-b71d-d1a0d97cd3eb
    resourceVersion: "4289"
    uid: da22f10c-82f4-4586-8810-65ee57dd6ed2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-2
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-stcnd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-stcnd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://005e0bf9e273bfc151ffdf54a9bce44db94962c089de5cdcab352ef0f72ba918
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:32Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-stcnd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    phase: Running
    podIP: 10.0.0.6
    podIPs:
    - ip: 10.0.0.6
    qosClass: Burstable
    startTime: "2024-10-24T13:02:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
    creationTimestamp: "2024-10-24T13:14:05Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: b98f4d8bc
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"261a4267-77ed-4ee9-b71d-d1a0d97cd3eb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:14:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.2"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:19:18Z"
    name: multus-vxgq8
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 261a4267-77ed-4ee9-b71d-d1a0d97cd3eb
    resourceVersion: "21376"
    uid: 550038ec-7b00-438d-901b-c21abb1de15a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lmhr2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: default-dockercfg-mjrgj
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-lmhr2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9513b727be9d2a70cc6d175ea2fec710ff42da2e5b34c1bfa9eeb416409ffdde
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
      lastState:
        terminated:
          containerID: cri-o://6ae1020c472f7dd0a85f3a6777fa5d1fb129a7a667c8fc9b4579a93d5c11aaeb
          exitCode: 1
          finishedAt: "2024-10-24T13:18:27Z"
          message: |
            2024-10-24T13:17:41+00:00 [cnibincopy] Successfully copied files in /usr/src/multus-cni/rhel9/bin/ to /host/opt/cni/bin/upgrade_ef724f43-4e34-47c2-b671-6b73d26445c0
            2024-10-24T13:17:41+00:00 [cnibincopy] Successfully moved files in /host/opt/cni/bin/upgrade_ef724f43-4e34-47c2-b671-6b73d26445c0 to /host/opt/cni/bin/
            2024-10-24T13:17:41Z [verbose] multus-daemon started
            2024-10-24T13:17:41Z [verbose] Readiness Indicator file check
            2024-10-24T13:18:26Z [error] have you checked that your default network is ready? still waiting for readinessindicatorfile @ /host/run/multus/cni/net.d/10-ovn-kubernetes.conf. pollimmediate error: timed out waiting for the condition
          reason: Error
          startedAt: "2024-10-24T13:17:41Z"
      name: kube-multus
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:17Z"
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lmhr2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.2
    hostIPs:
    - ip: 10.0.128.2
    phase: Running
    podIP: 10.0.128.2
    podIPs:
    - ip: 10.0.128.2
    qosClass: Burstable
    startTime: "2024-10-24T13:14:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.4/23"],"mac_address":"0a:58:0a:81:00:04","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.0.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.4/23","gateway_ip":"10.129.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.4"
            ],
            "mac": "0a:58:0a:81:00:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-10-24T13:02:18Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59d5b5ddcf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"169a9370-94a2-4082-a1a0-17fb7ec7e55d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-2fcpj5j6-f6035-2lklf-master-0
      operation: Update
      subresource: status
      time: "2024-10-24T13:03:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-10-24T13:04:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:04:33Z"
    name: network-metrics-daemon-7wllj
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 169a9370-94a2-4082-a1a0-17fb7ec7e55d
    resourceVersion: "9926"
    uid: 095b9489-41b3-4e5a-8f92-08327a08c595
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-0
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ss92b
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ss92b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-0
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-ss92b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://62144a73ae81dda4853a16271ccc155d3f711e5cea48b64355d375d31e89cc28
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:04:32Z"
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ss92b
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://fcf81c2f97715709cfb829cdb5f4238bbc151db1122d7e0dc5d55130fed0d495
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:04:32Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ss92b
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.3
    hostIPs:
    - ip: 10.0.0.3
    phase: Running
    podIP: 10.129.0.4
    podIPs:
    - ip: 10.129.0.4
    qosClass: Burstable
    startTime: "2024-10-24T13:02:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.3/23"],"mac_address":"0a:58:0a:80:02:03","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"169.254.0.5/32","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.3/23","gateway_ip":"10.128.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.3"
            ],
            "mac": "0a:58:0a:80:02:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-10-24T13:15:23Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59d5b5ddcf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"169a9370-94a2-4082-a1a0-17fb7ec7e55d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
      operation: Update
      subresource: status
      time: "2024-10-24T13:19:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-10-24T13:21:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:21:39Z"
    name: network-metrics-daemon-bmskb
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 169a9370-94a2-4082-a1a0-17fb7ec7e55d
    resourceVersion: "22454"
    uid: ce2a4277-8dc1-4b49-8d7c-8e2d21f2d428
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nvg72
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nvg72
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-tz987
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-nvg72
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:21:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:21:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:21:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://0db3299c4918b4f34b3225c499975a2e5032b680d50ed04cdbe552d0632190ce
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:21:39Z"
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nvg72
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://7211bf4a2c5100bacf9388c2917728064190605ce05504dc048c4181a7a54514
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:21:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nvg72
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    phase: Running
    podIP: 10.128.2.3
    podIPs:
    - ip: 10.128.2.3
    qosClass: Burstable
    startTime: "2024-10-24T13:15:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.4/23"],"mac_address":"0a:58:0a:81:02:04","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"169.254.0.5/32","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.4/23","gateway_ip":"10.129.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.4"
            ],
            "mac": "0a:58:0a:81:02:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-10-24T13:15:28Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59d5b5ddcf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"169a9370-94a2-4082-a1a0-17fb7ec7e55d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
      operation: Update
      subresource: status
      time: "2024-10-24T13:19:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:22Z"
    name: network-metrics-daemon-d5jsz
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 169a9370-94a2-4082-a1a0-17fb7ec7e55d
    resourceVersion: "21953"
    uid: caac494d-882c-429f-a402-d29b29f11e34
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bjjcp
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bjjcp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-tz987
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-bjjcp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a312f1bff39c0e78c8cd0a69f30faf905081f9fbadfeba58b77f4ccdaa0a1672
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:20:22Z"
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bjjcp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://c609d72f78489acc76c9e8d087df9191b9152968df7889f586f4743812b2c268
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:20:22Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bjjcp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.3
    hostIPs:
    - ip: 10.0.128.3
    phase: Running
    podIP: 10.129.2.4
    podIPs:
    - ip: 10.129.2.4
    qosClass: Burstable
    startTime: "2024-10-24T13:16:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.3/23"],"mac_address":"0a:58:0a:80:00:03","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"169.254.0.5/32","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.3/23","gateway_ip":"10.128.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.3"
            ],
            "mac": "0a:58:0a:80:00:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-10-24T13:02:18Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59d5b5ddcf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"169a9370-94a2-4082-a1a0-17fb7ec7e55d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-2fcpj5j6-f6035-2lklf-master-2
      operation: Update
      subresource: status
      time: "2024-10-24T13:02:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-10-24T13:04:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:04:32Z"
    name: network-metrics-daemon-flk7c
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 169a9370-94a2-4082-a1a0-17fb7ec7e55d
    resourceVersion: "9914"
    uid: a1f1a709-e3b2-4776-856f-2c52a92ae93c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-2
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pzkdk
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pzkdk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-pzkdk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://816a6b69196fb641d4bc2f03275877cb890c2a670d6539cf16bd41b68abe9ea0
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:04:32Z"
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pzkdk
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://fa1388448dfa607c5fce0eb4b5454dda73316030067db88d8e69425248490766
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:04:32Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pzkdk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    phase: Running
    podIP: 10.128.0.3
    podIPs:
    - ip: 10.128.0.3
    qosClass: Burstable
    startTime: "2024-10-24T13:02:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.5/23"],"mac_address":"0a:58:0a:83:00:05","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"169.254.0.5/32","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.5/23","gateway_ip":"10.131.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.5"
            ],
            "mac": "0a:58:0a:83:00:05",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-10-24T13:14:05Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59d5b5ddcf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"169a9370-94a2-4082-a1a0-17fb7ec7e55d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:14:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
      operation: Update
      subresource: status
      time: "2024-10-24T13:15:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.5"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:21Z"
    name: network-metrics-daemon-sfvgs
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 169a9370-94a2-4082-a1a0-17fb7ec7e55d
    resourceVersion: "21945"
    uid: 55e8fb99-7c2b-4a23-98ae-a67ead81dbc7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtfnv
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtfnv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-tz987
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-rtfnv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://add739da235a339daf471b375bb26c156b696eeedb863bbe1d7108b4780531aa
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:20:21Z"
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtfnv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://1dd5e13c016d5ae96504f2e7d7ac35ed4851772d99cb1e855b9dc404ba1120f1
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:20:20Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtfnv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.2
    hostIPs:
    - ip: 10.0.128.2
    phase: Running
    podIP: 10.131.0.5
    podIPs:
    - ip: 10.131.0.5
    qosClass: Burstable
    startTime: "2024-10-24T13:14:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.4/23"],"mac_address":"0a:58:0a:82:00:04","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.0.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.4/23","gateway_ip":"10.130.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.4"
            ],
            "mac": "0a:58:0a:82:00:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-10-24T13:02:18Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 59d5b5ddcf
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"169a9370-94a2-4082-a1a0-17fb7ec7e55d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-2fcpj5j6-f6035-2lklf-master-1
      operation: Update
      subresource: status
      time: "2024-10-24T13:02:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-10-24T13:04:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:04:36Z"
    name: network-metrics-daemon-tj4rp
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 169a9370-94a2-4082-a1a0-17fb7ec7e55d
    resourceVersion: "9969"
    uid: c9a319da-c887-47da-9e66-e038d552099a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-1
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6j7hc
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6j7hc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-6j7hc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:04:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://585a4ce1afc6a87147b11acb0c7b7fd7f6332421c81868ab0edb427bdab7411c
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:04:36Z"
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6j7hc
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://1666336bb7032726767d8aef97712c9a0c99f225c3abc86a07a1fec797f2b742
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:15787ce2b36a0ced4401b63f284ac2be321dcef56684a8cdd1ab723596f6e854
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:04:35Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6j7hc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.4
    hostIPs:
    - ip: 10.0.0.4
    phase: Running
    podIP: 10.130.0.4
    podIPs:
    - ip: 10.130.0.4
    qosClass: Burstable
    startTime: "2024-10-24T13:02:18Z"
kind: PodList
metadata:
  resourceVersion: "60823"
