---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
  creationTimestamp: "2024-10-24T13:02:17Z"
  generateName: multus-additional-cni-plugins-
  labels:
    app: multus-additional-cni-plugins
    component: network
    controller-revision-hash: 7c958cbc79
    openshift.io/component: network
    pod-template-generation: "1"
    type: infra
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:component: {}
          f:controller-revision-hash: {}
          f:openshift.io/component: {}
          f:pod-template-generation: {}
          f:type: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"6639bfb6-04ce-4e19-993b-511b48e2d3fb"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"kube-multus-additional-cni-plugins"}:
            .: {}
            f:args: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:initContainers:
          .: {}
          k:{"name":"bond-cni-plugin"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"cni-plugins"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/cni/tuning/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/sysctls"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"egress-router-binary-copy"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"routeoverride-cni"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"whereabouts-cni"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"CNI_BIN_DIR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CNI_CONF_DIR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_HOST"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"SLEEP"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"WHEREABOUTS_NAMESPACE"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/host/etc/cni/net.d"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"whereabouts-cni-bincopy"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"cni-binary-copy"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"cni-sysctl-allowlist"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"cnibin"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"multus-cni-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"os-release"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"system-cni-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"tuning-conf-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2024-10-24T13:02:17Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.0.0.3"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2024-10-24T13:03:05Z"
  name: multus-additional-cni-plugins-l7nh6
  namespace: openshift-multus
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: multus-additional-cni-plugins
    uid: 6639bfb6-04ce-4e19-993b-511b48e2d3fb
  resourceVersion: "4947"
  uid: 90004e51-0e2f-41ce-8772-7dfa7524e639
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - ci-op-2fcpj5j6-f6035-2lklf-master-0
  containers:
  - args:
    - |
      trap : TERM INT; sleep infinity & wait
    command:
    - /bin/bash
    - -ec
    - --
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
    imagePullPolicy: IfNotPresent
    name: kube-multus-additional-cni-plugins
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  initContainers:
  - command:
    - /entrypoint/cnibincopy.sh
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /usr/src/egress-router-cni/rhel8/bin/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /usr/src/egress-router-cni/rhel9/bin/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /usr/src/egress-router-cni/bin/
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
    imagePullPolicy: IfNotPresent
    name: egress-router-binary-copy
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /usr/src/plugins/rhel8/bin/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /usr/src/plugins/rhel9/bin/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /usr/src/plugins/bin/
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
    imagePullPolicy: IfNotPresent
    name: cni-plugins
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /host/etc/cni/tuning/
      name: tuning-conf-dir
    - mountPath: /sysctls
      name: cni-sysctl-allowlist
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
  - command:
    - /entrypoint/cnibincopy.sh
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /bondcni/rhel8/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /bondcni/rhel9/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /bondcni/rhel9/
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
    imagePullPolicy: IfNotPresent
    name: bond-cni-plugin
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
  - command:
    - /entrypoint/cnibincopy.sh
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /usr/src/route-override/rhel8/bin/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /usr/src/route-override/rhel9/bin/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /usr/src/route-override/bin/
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
    imagePullPolicy: IfNotPresent
    name: routeoverride-cni
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
  - command:
    - /entrypoint/cnibincopy.sh
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /usr/src/whereabouts/rhel8/bin/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /usr/src/whereabouts/rhel9/bin/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /usr/src/whereabouts/bin/
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
    imagePullPolicy: IfNotPresent
    name: whereabouts-cni-bincopy
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
  - command:
    - /bin/sh
    - -c
    - |
      #!/bin/sh

      set -u -e

      CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
      WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
      CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

      # Make a whereabouts.d directory (for our kubeconfig)

      mkdir -p $CNI_CONF_DIR/whereabouts.d
      WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
      WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

      # ------------------------------- Generate a "kube-config"
      SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
      KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
      SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
      SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


      # Check if we're running as a k8s pod.
      if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
        # We're running as a k8d pod - expect some variables.
        if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
          error "KUBERNETES_SERVICE_HOST not set"; exit 1;
        fi
        if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
          error "KUBERNETES_SERVICE_PORT not set"; exit 1;
        fi

        if [ "$SKIP_TLS_VERIFY" == "true" ]; then
          TLS_CFG="insecure-skip-tls-verify: true"
        elif [ -f "$KUBE_CA_FILE" ]; then
          TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
        fi

        # Write a kubeconfig file for the CNI plugin.  Do this
        # to skip TLS verification for now.  We should eventually support
        # writing more complete kubeconfig files. This is only used
        # if the provided CNI network config references it.
        touch $WHEREABOUTS_KUBECONFIG
        chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
        cat > $WHEREABOUTS_KUBECONFIG <<EOF
      # Kubeconfig file for Multus CNI plugin.
      apiVersion: v1
      kind: Config
      clusters:
      - name: local
        cluster:
          server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
          $TLS_CFG
      users:
      - name: whereabouts
        user:
          token: "${SERVICEACCOUNT_TOKEN}"
      contexts:
      - name: whereabouts-context
        context:
          cluster: local
          user: whereabouts
          namespace: ${WHEREABOUTS_NAMESPACE}
      current-context: whereabouts-context
      EOF

      # Kubeconfig file for Whereabouts CNI plugin.
      cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
      {
        "datastore": "kubernetes",
        "kubernetes": {
          "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
        },
        "reconciler_cron_expression": "30 4 * * *",
        "log_level": "debug"
      }
      EOF
      chmod 600 $WHEREABOUTS_GLOBALCONFIG

      else
        warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
      fi

      # copy whereabouts to the cni bin dir
      # SKIPPED DUE TO FIPS COPY.
      # cp -f /whereabouts $CNI_BIN_DIR

      # ---------------------- end Generate a "kube-config".

      # Unless told otherwise, sleep forever.
      # This prevents Kubernetes from restarting the pod repeatedly.
      should_sleep=${SLEEP:-"true"}
      echo "Done configuring CNI.  Sleep=$should_sleep"
      while [ "$should_sleep" == "true"  ]; do
          sleep 1000000000000
      done
    env:
    - name: KUBERNETES_SERVICE_PORT
      value: "6443"
    - name: KUBERNETES_SERVICE_HOST
      value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
    - name: CNI_BIN_DIR
      value: /host/opt/cni/bin/
    - name: CNI_CONF_DIR
      value: /host/etc/cni/net.d
    - name: SLEEP
      value: "false"
    - name: WHEREABOUTS_NAMESPACE
      value: openshift-multus
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
    imagePullPolicy: IfNotPresent
    name: whereabouts-cni
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/cni/net.d
      name: system-cni-dir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
  nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-0
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: multus-ancillary-tools
  serviceAccountName: multus-ancillary-tools
  terminationGracePeriodSeconds: 10
  tolerations:
  - operator: Exists
  volumes:
  - hostPath:
      path: /etc/kubernetes/cni/net.d
      type: ""
    name: system-cni-dir
  - hostPath:
      path: /var/run/multus/cni/net.d
      type: ""
    name: multus-cni-dir
  - hostPath:
      path: /var/lib/cni/bin
      type: ""
    name: cnibin
  - hostPath:
      path: /etc/os-release
      type: File
    name: os-release
  - configMap:
      defaultMode: 484
      name: cni-copy-resources
    name: cni-binary-copy
  - hostPath:
      path: /etc/cni/tuning/
      type: DirectoryOrCreate
    name: tuning-conf-dir
  - configMap:
      defaultMode: 484
      name: default-cni-sysctl-allowlist
    name: cni-sysctl-allowlist
  - name: kube-api-access-pphvg
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:02:28Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:03:04Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:03:05Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:03:05Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:02:17Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://898ba78d1ac149c13a096ac03076c7ff69fccd665155c787bb8d850b089cc861
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:e518fa7811c999ddcd42118e54e5c509cead66f831b08157bfe30f3330a86a95
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:4e6b4ad4ce48e2903c91bf1f978dee4ec786696e234cd4a3f60415ea5c103458
    lastState: {}
    name: kube-multus-additional-cni-plugins
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-10-24T13:03:04Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 10.0.0.3
  hostIPs:
  - ip: 10.0.0.3
  initContainerStatuses:
  - containerID: cri-o://90b770c8bc874a1d89d825022357488f0272a2c87351d281c48b646fca2de2f3
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:08b1ec5a8e7a81d7bfe9d0649a7b3a3892d53ce3cc6ae3c82c51e81f20b62e96
    lastState: {}
    name: egress-router-binary-copy
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://90b770c8bc874a1d89d825022357488f0272a2c87351d281c48b646fca2de2f3
        exitCode: 0
        finishedAt: "2024-10-24T13:02:28Z"
        reason: Completed
        startedAt: "2024-10-24T13:02:27Z"
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: cri-o://17cd0a7e8b691cd185598245b1b2509a2eb24fc6018e44e66b18307ea13eab37
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ab5384c3fd93b40d299eb1ac0e115ffc0e96a14a88d2367d4c21ca4179a35a1d
    lastState: {}
    name: cni-plugins
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://17cd0a7e8b691cd185598245b1b2509a2eb24fc6018e44e66b18307ea13eab37
        exitCode: 0
        finishedAt: "2024-10-24T13:02:39Z"
        reason: Completed
        startedAt: "2024-10-24T13:02:39Z"
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /host/etc/cni/tuning/
      name: tuning-conf-dir
    - mountPath: /sysctls
      name: cni-sysctl-allowlist
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: cri-o://daf20398493213f140bc7b3185b0396f8713c4c1987fbccff06b25a89dcabba1
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:225334ac4eacee6b93b19fa939b565b0e177d0da9d49e701ab4db7309253fcaa
    lastState: {}
    name: bond-cni-plugin
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://daf20398493213f140bc7b3185b0396f8713c4c1987fbccff06b25a89dcabba1
        exitCode: 0
        finishedAt: "2024-10-24T13:02:49Z"
        reason: Completed
        startedAt: "2024-10-24T13:02:49Z"
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: cri-o://68a11c156f04ac46a8647800084717ab67ed6f10a731ef25f678a236b6e71391
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:bb11b8d7f3699b6ca202deb5c5139690eb865df1fe778f37f3a88af35ba65225
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:5fcdeb7bbe5cb6b038d339b3b719ada00f88ed459e6b7f4821c9b0a37239f977
    lastState: {}
    name: routeoverride-cni
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://68a11c156f04ac46a8647800084717ab67ed6f10a731ef25f678a236b6e71391
        exitCode: 0
        finishedAt: "2024-10-24T13:02:54Z"
        reason: Completed
        startedAt: "2024-10-24T13:02:53Z"
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: cri-o://31c72a4c532c0ac5a04cea4800553c270e1a14054ad6fa56afb7a4e3a470e6eb
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
    lastState: {}
    name: whereabouts-cni-bincopy
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://31c72a4c532c0ac5a04cea4800553c270e1a14054ad6fa56afb7a4e3a470e6eb
        exitCode: 0
        finishedAt: "2024-10-24T13:03:03Z"
        reason: Completed
        startedAt: "2024-10-24T13:03:03Z"
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: cri-o://a531f1a2e0d7236bc3eb1f07487081d99d59427a55f10c34a5a0281db2496d03
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:785b30a0f466a3a4581f68f36dd9de13a5700b48fe6b0e32f01541d4ae611010
    lastState: {}
    name: whereabouts-cni
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://a531f1a2e0d7236bc3eb1f07487081d99d59427a55f10c34a5a0281db2496d03
        exitCode: 0
        finishedAt: "2024-10-24T13:03:03Z"
        reason: Completed
        startedAt: "2024-10-24T13:03:03Z"
    volumeMounts:
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/cni/net.d
      name: system-cni-dir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-pphvg
      readOnly: true
      recursiveReadOnly: Disabled
  phase: Running
  podIP: 10.0.0.3
  podIPs:
  - ip: 10.0.0.3
  qosClass: Burstable
  startTime: "2024-10-24T13:02:17Z"
