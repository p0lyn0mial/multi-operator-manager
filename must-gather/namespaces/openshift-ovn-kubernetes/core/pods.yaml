---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-10-24T13:02:28Z"
    generateName: ovnkube-control-plane-54656c84bd-
    labels:
      app: ovnkube-control-plane
      component: network
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-hash: 54656c84bd
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c2f27cf5-a4fd-4b83-abaa-0567b1196b31"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"ovnkube-cluster-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovn-control-plane-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:19:04Z"
    name: ovnkube-control-plane-54656c84bd-cn29j
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ovnkube-control-plane-54656c84bd
      uid: c2f27cf5-a4fd-4b83-abaa-0567b1196b31
    resourceVersion: "21233"
    uid: 1e99ad31-46f5-41f7-a787-bd546b79cb1b
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        TLS_PK=/etc/pki/tls/metrics-cert/tls.key
        TLS_CERT=/etc/pki/tls/metrics-cert/tls.crt
        # As the secret mount is optional we must wait for the files to be present.
        # The service is created in monitor.yaml and this is created in sdn.yaml.
        TS=$(date +%s)
        WARN_TS=$(( ${TS} + $(( 20 * 60)) ))
        HAS_LOGGED_INFO=0

        log_missing_certs(){
            CUR_TS=$(date +%s)
            if [[ "${CUR_TS}" -gt "WARN_TS"  ]]; then
              echo $(date -Iseconds) WARN: ovn-control-plane-metrics-cert not mounted after 20 minutes.
            elif [[ "${HAS_LOGGED_INFO}" -eq 0 ]] ; then
              echo $(date -Iseconds) INFO: ovn-control-plane-metrics-cert not mounted. Waiting 20 minutes.
              HAS_LOGGED_INFO=1
            fi
        }
        while [[ ! -f "${TLS_PK}" ||  ! -f "${TLS_CERT}" ]] ; do
          log_missing_certs
          sleep 5
        done

        echo $(date -Iseconds) INFO: ovn-control-plane-metrics-certs mounted, starting kube-rbac-proxy
        exec /usr/bin/kube-rbac-proxy \
          --logtostderr \
          --secure-listen-address=:9108 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --upstream=http://127.0.0.1:29108/ \
          --tls-private-key-file=${TLS_PK} \
          --tls-cert-file=${TLS_CERT}
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9108
        hostPort: 9108
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-control-plane-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sr62n
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ovn_v4_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_join_subnet_opt="--gateway-v4-join-subnet "
        fi
        ovn_v6_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_join_subnet_opt="--gateway-v6-join-subnet "
        fi

        ovn_v4_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_transit_switch_subnet_opt="--cluster-manager-v4-transit-switch-subnet "
        fi
        ovn_v6_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_transit_switch_subnet_opt="--cluster-manager-v6-transit-switch-subnet "
        fi

        dns_name_resolver_enabled_flag=
        if [[ "false" == "true" ]]; then
          dns_name_resolver_enabled_flag="--enable-dns-name-resolver"
        fi

        persistent_ips_enabled_flag=
        if [[ "false" == "true" ]]; then
          persistent_ips_enabled_flag="--enable-persistent-ips"
        fi

        # This is needed so that converting clusters from GA to TP
        # will rollout control plane pods as well
        network_segmentation_enabled_flag=
        multi_network_enabled_flag=
        if [[ "false" == "true" ]]; then
          multi_network_enabled_flag="--enable-multi-network"
          network_segmentation_enabled_flag="--enable-network-segmentation"
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - ovnkube-control-plane - start ovnkube --init-cluster-manager ${K8S_NODE}"
        exec /usr/bin/ovnkube \
          --enable-interconnect \
          --init-cluster-manager "${K8S_NODE}" \
          --config-file=/run/ovnkube-config/ovnkube.conf \
          --loglevel "${OVN_KUBE_LOG_LEVEL}" \
          --metrics-bind-address "127.0.0.1:29108" \
          --metrics-enable-pprof \
          --metrics-enable-config-duration \
          ${ovn_v4_join_subnet_opt} \
          ${ovn_v6_join_subnet_opt} \
          ${ovn_v4_transit_switch_subnet_opt} \
          ${ovn_v6_transit_switch_subnet_opt} \
          ${dns_name_resolver_enabled_flag} \
          ${persistent_ips_enabled_flag} \
          ${multi_network_enabled_flag} \
          ${network_segmentation_enabled_flag}
      env:
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovnkube-cluster-manager
      ports:
      - containerPort: 29108
        hostPort: 29108
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sr62n
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-2
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-control-plane
    serviceAccountName: ovn-kubernetes-control-plane
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-control-plane-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-control-plane-metrics-cert
    - name: kube-api-access-sr62n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4265ea3779b9a2b14c6f4e8e584b6f7b5061de952ae300ff7ac058b162264006
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:32Z"
      volumeMounts:
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-control-plane-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sr62n
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://1250ae448fda6f45707e007de9b2483c2bb380c60a449ab667b59ed3b8681b1e
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState:
        terminated:
          containerID: cri-o://c486746865cbed9c0da1df4d3997a7a341c99bef260cacf0c48da732f80060e3
          exitCode: 0
          finishedAt: "2024-10-24T13:19:03Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:47Z"
      name: ovnkube-cluster-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:03Z"
      volumeMounts:
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sr62n
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    phase: Running
    podIP: 10.0.0.6
    podIPs:
    - ip: 10.0.0.6
    qosClass: Burstable
    startTime: "2024-10-24T13:02:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-10-24T13:02:28Z"
    generateName: ovnkube-control-plane-54656c84bd-
    labels:
      app: ovnkube-control-plane
      component: network
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-hash: 54656c84bd
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c2f27cf5-a4fd-4b83-abaa-0567b1196b31"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"ovnkube-cluster-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovn-control-plane-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:10:20Z"
    name: ovnkube-control-plane-54656c84bd-zpzjn
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ovnkube-control-plane-54656c84bd
      uid: c2f27cf5-a4fd-4b83-abaa-0567b1196b31
    resourceVersion: "16693"
    uid: aef2360e-1427-4bf7-93dd-e648f30cd931
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        TLS_PK=/etc/pki/tls/metrics-cert/tls.key
        TLS_CERT=/etc/pki/tls/metrics-cert/tls.crt
        # As the secret mount is optional we must wait for the files to be present.
        # The service is created in monitor.yaml and this is created in sdn.yaml.
        TS=$(date +%s)
        WARN_TS=$(( ${TS} + $(( 20 * 60)) ))
        HAS_LOGGED_INFO=0

        log_missing_certs(){
            CUR_TS=$(date +%s)
            if [[ "${CUR_TS}" -gt "WARN_TS"  ]]; then
              echo $(date -Iseconds) WARN: ovn-control-plane-metrics-cert not mounted after 20 minutes.
            elif [[ "${HAS_LOGGED_INFO}" -eq 0 ]] ; then
              echo $(date -Iseconds) INFO: ovn-control-plane-metrics-cert not mounted. Waiting 20 minutes.
              HAS_LOGGED_INFO=1
            fi
        }
        while [[ ! -f "${TLS_PK}" ||  ! -f "${TLS_CERT}" ]] ; do
          log_missing_certs
          sleep 5
        done

        echo $(date -Iseconds) INFO: ovn-control-plane-metrics-certs mounted, starting kube-rbac-proxy
        exec /usr/bin/kube-rbac-proxy \
          --logtostderr \
          --secure-listen-address=:9108 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --upstream=http://127.0.0.1:29108/ \
          --tls-private-key-file=${TLS_PK} \
          --tls-cert-file=${TLS_CERT}
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9108
        hostPort: 9108
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-control-plane-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrsb6
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ovn_v4_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_join_subnet_opt="--gateway-v4-join-subnet "
        fi
        ovn_v6_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_join_subnet_opt="--gateway-v6-join-subnet "
        fi

        ovn_v4_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_transit_switch_subnet_opt="--cluster-manager-v4-transit-switch-subnet "
        fi
        ovn_v6_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_transit_switch_subnet_opt="--cluster-manager-v6-transit-switch-subnet "
        fi

        dns_name_resolver_enabled_flag=
        if [[ "false" == "true" ]]; then
          dns_name_resolver_enabled_flag="--enable-dns-name-resolver"
        fi

        persistent_ips_enabled_flag=
        if [[ "false" == "true" ]]; then
          persistent_ips_enabled_flag="--enable-persistent-ips"
        fi

        # This is needed so that converting clusters from GA to TP
        # will rollout control plane pods as well
        network_segmentation_enabled_flag=
        multi_network_enabled_flag=
        if [[ "false" == "true" ]]; then
          multi_network_enabled_flag="--enable-multi-network"
          network_segmentation_enabled_flag="--enable-network-segmentation"
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - ovnkube-control-plane - start ovnkube --init-cluster-manager ${K8S_NODE}"
        exec /usr/bin/ovnkube \
          --enable-interconnect \
          --init-cluster-manager "${K8S_NODE}" \
          --config-file=/run/ovnkube-config/ovnkube.conf \
          --loglevel "${OVN_KUBE_LOG_LEVEL}" \
          --metrics-bind-address "127.0.0.1:29108" \
          --metrics-enable-pprof \
          --metrics-enable-config-duration \
          ${ovn_v4_join_subnet_opt} \
          ${ovn_v6_join_subnet_opt} \
          ${ovn_v4_transit_switch_subnet_opt} \
          ${ovn_v6_transit_switch_subnet_opt} \
          ${dns_name_resolver_enabled_flag} \
          ${persistent_ips_enabled_flag} \
          ${multi_network_enabled_flag} \
          ${network_segmentation_enabled_flag}
      env:
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovnkube-cluster-manager
      ports:
      - containerPort: 29108
        hostPort: 29108
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrsb6
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-0
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-control-plane
    serviceAccountName: ovn-kubernetes-control-plane
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-control-plane-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-control-plane-metrics-cert
    - name: kube-api-access-jrsb6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:09:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:09:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8c3a7ac6593d2829170e35888fde7b794658b5aaa56fd78bee0a9297239fbf8a
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:32Z"
      volumeMounts:
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-control-plane-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrsb6
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://6112adc7f8e0295b2ab45af6065d34d3bc46623d2579bff1c23d82995689b97b
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState:
        terminated:
          containerID: cri-o://7f5f1afd3074f9b42f18432fba1b37b236de4e8e372eb83093c62c7dca8a4a4b
          exitCode: 0
          finishedAt: "2024-10-24T13:09:45Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:46Z"
      name: ovnkube-cluster-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:09:45Z"
      volumeMounts:
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jrsb6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.3
    hostIPs:
    - ip: 10.0.0.3
    phase: Running
    podIP: 10.0.0.3
    podIPs:
    - ip: 10.0.0.3
    qosClass: Burstable
    startTime: "2024-10-24T13:02:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      network.operator.openshift.io/ovnkube-script-lib-hash: c39a2ee587ad2a45e40660745c017273af129e92
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-10-24T13:02:56Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 7dd8f9df5d
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"483da90d-5dda-43a2-8c67-8b1c24d4b18d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:03:10Z"
    name: ovnkube-node-ccj7k
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 483da90d-5dda-43a2-8c67-8b1c24d4b18d
    resourceVersion: "4998"
    uid: 2305cb84-ab4a-40d2-884e-da01c83989b4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-2
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-jg2mp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://590039a1f8362c568e446233f50b574cf7a127bd16fe076f531041b57b26b4a6
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:57Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://b274e6753043327f7588086a10f4782e6f570ef709f007704c54ed75739fe4d9
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:57Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://8a2f6abfbc804729e106b8a5307ae750726a033065e48c05a3c6e7b052396fef
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:57Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://788f6b4f760b9ab5d6c3f66ba25a72998ddba9e9d3ce72b3a76a0c75472f923b
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:57Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://6cbd4a03bdd793fb0458ee61e04d5ed10b6f97815c126cd6f385c4eec0800600
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:57Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://d65417a130c37cf047c876004c89b35ed2b0bfa733d6015186d9bbbd05e32baf
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:57Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://70ea38d6121d028ee8efd9d7e6d2686170341e41d6d7d0ed0e37f667046e66d1
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:05Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host
        name: host-slash
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        name: host-run-netns
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://1f7240f8a7bc935b93ddc35b38a49e40a66b47a80431053741f48b6db0cfb291
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:59Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    initContainerStatuses:
    - containerID: cri-o://088f0d3b0dfc97bddda243109e8b714a9c85ca565c36d38c364c9c85bd8c3e74
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://088f0d3b0dfc97bddda243109e8b714a9c85ca565c36d38c364c9c85bd8c3e74
          exitCode: 0
          finishedAt: "2024-10-24T13:02:56Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:56Z"
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jg2mp
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.0.6
    podIPs:
    - ip: 10.0.0.6
    qosClass: Burstable
    startTime: "2024-10-24T13:02:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      network.operator.openshift.io/ovnkube-script-lib-hash: c39a2ee587ad2a45e40660745c017273af129e92
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-10-24T13:03:26Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 7dd8f9df5d
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"483da90d-5dda-43a2-8c67-8b1c24d4b18d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:03:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:03:47Z"
    name: ovnkube-node-m7hdx
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 483da90d-5dda-43a2-8c67-8b1c24d4b18d
    resourceVersion: "7754"
    uid: 0646a1b8-e341-4f5a-9e6e-2ae0b6f6f0b4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-0
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-0
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-82ckq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://59bc7a8647892c4055dd9b2ddc3b67b4696efe96b174bfc1c54221215c754998
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:27Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://2d3512ef69cffc60414642a7447c0b3d8e4e747dd2137d95113ff38cf7c768ea
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:27Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://954cc4a0158b6d4d9aaeb4ed904b85bf5e3bdd7039524ea91fe02a41379b3b63
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:28Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://b29ab2aa17f66ccd1d88b46a21ff22be536254c83c4f5eb2cb4ca5de658c5b6a
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:28Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://34349d5bed0bb82871ce8bba35965122f3c30bc41a8ff8b17338a21ae0d12216
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:27Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://494883ccb42d7afb6760ef4589874b9caea7d82dc0ba7986206f5f7824493262
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:27Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://ef1a534d988f2fe6ac6f4ee04c5b94fe431119a1d4f627a6ccac0cedca801d8e
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:32Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host
        name: host-slash
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        name: host-run-netns
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://f819feb4b2dec40e9a334958af9b7dcaddcb8881cffed98926c86961aa061dd1
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:30Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.3
    hostIPs:
    - ip: 10.0.0.3
    initContainerStatuses:
    - containerID: cri-o://8e52c9d53a99fa1461f35d66cbd4428b8f6c4e5369ab5c574a260c5404b58466
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://8e52c9d53a99fa1461f35d66cbd4428b8f6c4e5369ab5c574a260c5404b58466
          exitCode: 0
          finishedAt: "2024-10-24T13:03:27Z"
          reason: Completed
          startedAt: "2024-10-24T13:03:27Z"
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82ckq
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.0.3
    podIPs:
    - ip: 10.0.0.3
    qosClass: Burstable
    startTime: "2024-10-24T13:03:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      network.operator.openshift.io/ovnkube-script-lib-hash: c39a2ee587ad2a45e40660745c017273af129e92
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-10-24T13:02:57Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 7dd8f9df5d
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"483da90d-5dda-43a2-8c67-8b1c24d4b18d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:02:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:03:18Z"
    name: ovnkube-node-n6p6d
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 483da90d-5dda-43a2-8c67-8b1c24d4b18d
    resourceVersion: "5283"
    uid: 80456863-af33-4349-8846-0621b2f0fe42
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-master-1
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-xzqlv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:03:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:02:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://0597b2cf8ebf986d9078359a42011dd0b732598d55196faad05e9b1224a34067
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:58Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://c0edfc495c1091b8bcafe245d28d68f81935fd9a6b5dff78118568540dd64082
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:59Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://e11342eb6d198628e749f33b3442c797645c7f1a0614de04feb34b078ca136ed
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:59Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://35638f5cb634470346ca16554d30790b706b723a48906c2d0ea9ca1a437b285e
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:59Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://90056d244d001cb0929053023472da152f1486b50be8251c06b7fedc189c0604
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:58Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://1362802fe8b2d06aa6af00d463d7398ab48734be531ae5ad39563db8a60b1da3
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:02:58Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://69249c7aa2847d460c7c1afabc77acc35a978df833e6f259ebb62d90d9a49d16
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:03Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host
        name: host-slash
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        name: host-run-netns
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://9293e4cbec94f807978e8e02faaa33ea3f401f9b534798bb5fd3dd9dddc5a2c0
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:03:01Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.0.4
    hostIPs:
    - ip: 10.0.0.4
    initContainerStatuses:
    - containerID: cri-o://b335c5bfce34ef737331df4c08c4d6393a3fc8ff95df940499b031d2cd5e8fa1
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b335c5bfce34ef737331df4c08c4d6393a3fc8ff95df940499b031d2cd5e8fa1
          exitCode: 0
          finishedAt: "2024-10-24T13:02:58Z"
          reason: Completed
          startedAt: "2024-10-24T13:02:58Z"
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xzqlv
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.0.4
    podIPs:
    - ip: 10.0.0.4
    qosClass: Burstable
    startTime: "2024-10-24T13:02:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      network.operator.openshift.io/ovnkube-script-lib-hash: c39a2ee587ad2a45e40660745c017273af129e92
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-10-24T13:15:23Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 7dd8f9df5d
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"483da90d-5dda-43a2-8c67-8b1c24d4b18d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:24Z"
    name: ovnkube-node-pfhnt
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 483da90d-5dda-43a2-8c67-8b1c24d4b18d
    resourceVersion: "21961"
    uid: 4841066c-e6ef-4314-9b78-f376dedd461e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: ovn-kubernetes-node-dockercfg-tj4f7
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-c-z8hfz
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-pwrq7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:01Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:16:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6653ee02cc2faab34f642f59716139fe3d55a2d175d01b6981ceb0d9573526eb
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:16:16Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://99d8838a7df51f021b352f2448ba95160e32b9c3d2b38a4329ab80c99242ce53
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:16:16Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://a7b60897dbc9628648fb1b11bd0a6bd4729f16f961d1f7fc15d22d3e79787a31
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:16:16Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://2f513e30bd5bc899169c235294867dad211dab7b2c010d83f220fbbb6fcabea9
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:16:16Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://38afbb2a35985dd81fb61eaba74350a31bd845ea1780f1d8142e266c7a8f914e
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:16:16Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://fb597ab28227e80b8551f9e4341c5d2bf9751e33a7d7516adc094487bb7a1076
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:16:16Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://663117f694cb9457ac931efde053d818f3a8d1ca4ec2a8cabc1f864907501569
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState:
        terminated:
          containerID: cri-o://9ae9190f1cdf2ed07415b5e04396f078d18bb6dbfa169f17508125af8ffb2b2d
          exitCode: 1
          finishedAt: "2024-10-24T13:18:21Z"
          message: |-
            ed certificate from the control plane: cannot create certificate signing request: rpc error: code = DeadlineExceeded desc = context deadline exceeded
            I1024 13:16:41.643802    3308 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            E1024 13:16:48.652645    3308 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: rpc error: code = DeadlineExceeded desc = context deadline exceeded
            I1024 13:16:57.053513    3308 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            E1024 13:17:04.061934    3308 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: rpc error: code = DeadlineExceeded desc = context deadline exceeded
            I1024 13:17:20.978207    3308 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            E1024 13:17:27.986304    3308 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: rpc error: code = DeadlineExceeded desc = context deadline exceeded
            E1024 13:17:27.986351    3308 certifica
          reason: Error
          startedAt: "2024-10-24T13:16:21Z"
      name: ovnkube-controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:18:21Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host
        name: host-slash
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        name: host-run-netns
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://5a1b9a79db3c55fb1a79b4e5b6b02f092cec1c2ed311c7feea180aebb7d3dce6
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:16:18Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    initContainerStatuses:
    - containerID: cri-o://2950b4160b5bea294d517c8b8dc913740cf872c0a065dcc3eeb809a54a77ede2
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://2950b4160b5bea294d517c8b8dc913740cf872c0a065dcc3eeb809a54a77ede2
          exitCode: 0
          finishedAt: "2024-10-24T13:16:15Z"
          reason: Completed
          startedAt: "2024-10-24T13:16:15Z"
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pwrq7
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.128.4
    podIPs:
    - ip: 10.0.128.4
    qosClass: Burstable
    startTime: "2024-10-24T13:15:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      network.operator.openshift.io/ovnkube-script-lib-hash: c39a2ee587ad2a45e40660745c017273af129e92
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-10-24T13:15:28Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 7dd8f9df5d
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"483da90d-5dda-43a2-8c67-8b1c24d4b18d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:09Z"
    name: ovnkube-node-qfgpz
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 483da90d-5dda-43a2-8c67-8b1c24d4b18d
    resourceVersion: "21849"
    uid: 9ff892ef-1e7a-4f1c-a632-aa8cbc19cfdd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: ovn-kubernetes-node-dockercfg-tj4f7
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-b-hj8l2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-g4gbv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:19:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:15:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1ad57a996d076be8f28534a6a11fcf4fb8d98e92a955b01f68db13081b89f7df
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:49Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://cc91ab2ad75d89b0811fb2c9f08a2f8b4886d8ab4eb81dfeb1c42b45d63fc623
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:49Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://2e0b6ab98d5640328964e15e3dfa4354aebb3a0a1fba4d2e71e1f3b57e2266bb
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:49Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://459efcc57412adfb6275bd728caa64968e263b16e072201815d1e6b6a5428779
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:49Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://f2d1af7890806e77cdccf10150b1d8b0e4ede9bc637f45b848086f5446fe0648
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:49Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://e4b6bfb63eeacf5b80185efe5c07d85f16dd7069f6919cc44344d1185bb291a4
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:49Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://57aeae563d0e7bafceaa04a855804d39152aa73af26387fe020d130a24090d63
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:55Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host
        name: host-slash
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        name: host-run-netns
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://db3525d84b8b9bdc3fb20ebc877b1bab9e42a90945f422e73ec7b6915a1b9cc7
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:19:52Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.3
    hostIPs:
    - ip: 10.0.128.3
    initContainerStatuses:
    - containerID: cri-o://625c49f0c16855308ce0c5dea8bfd9bcde616313c857c44060f90feed1947398
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://625c49f0c16855308ce0c5dea8bfd9bcde616313c857c44060f90feed1947398
          exitCode: 0
          finishedAt: "2024-10-24T13:19:48Z"
          reason: Completed
          startedAt: "2024-10-24T13:19:48Z"
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4gbv
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.128.3
    podIPs:
    - ip: 10.0.128.3
    qosClass: Burstable
    startTime: "2024-10-24T13:16:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
      network.operator.openshift.io/ovnkube-script-lib-hash: c39a2ee587ad2a45e40660745c017273af129e92
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-10-24T13:14:05Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 7dd8f9df5d
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/enable-ds-eviction: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"483da90d-5dda-43a2-8c67-8b1c24d4b18d"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:14:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.2"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-10-24T13:20:06Z"
    name: ovnkube-node-ts5rk
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 483da90d-5dda-43a2-8c67-8b1c24d4b18d
    resourceVersion: "21826"
    uid: a53ab09b-be65-4038-b3ff-6d2ad3baf529
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: ovn-kubernetes-node-dockercfg-tj4f7
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-2fcpj5j6-f6035.XXXXXXXXXXXXXXXXXXXXXX:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
    nodeName: ci-op-2fcpj5j6-f6035-2lklf-worker-a-8hj4x
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-vcmkv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:20:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-10-24T13:14:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://78edd769fb7b160a982256e89b97a1a58c634a4b552956bec7a7dac404ac5a85
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:14:56Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://b2074badb071a5e4318a76cad698f12d563fb4097c9193b34ceb65b22f507d86
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:14:56Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://071fa265fa1fd6a8eef441711b3f0a335c34533584e0e138dc68095ce184f43d
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:14:56Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://b2868058b59728ea2c22d6439c3725d1a652a55c57786e4ddf889611dda37308
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:14:56Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://105459bc15ff2752d4fdb87f3b8fcb20141757625b59af680de1c8a5f81399dc
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:14:56Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://dfa6daa4fbbd1f7578b1f4e58c19714a0d17122088b58245b706cad482fc40ac
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:14:56Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://3852a14282ac6991c9ab13bca1405ad0eda7c5824832105d9a81b6599f172ae3
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:15:01Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host
        name: host-slash
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        name: host-run-netns
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: cri-o://4c691f0f0bd9b99ca3ca0b8b306624681f7d0f0253ffac0fa1e6ff97ef723919
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-10-24T13:14:58Z"
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.0.128.2
    hostIPs:
    - ip: 10.0.128.2
    initContainerStatuses:
    - containerID: cri-o://e443f0389fc009ed35d04b661b9cbcca0b8e60591423c19e4e937d2a8d35a573
      image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e443f0389fc009ed35d04b661b9cbcca0b8e60591423c19e4e937d2a8d35a573
          exitCode: 0
          finishedAt: "2024-10-24T13:14:55Z"
          reason: Completed
          startedAt: "2024-10-24T13:14:55Z"
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vcmkv
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.0.128.2
    podIPs:
    - ip: 10.0.128.2
    qosClass: Burstable
    startTime: "2024-10-24T13:14:05Z"
kind: PodList
metadata:
  resourceVersion: "60983"
