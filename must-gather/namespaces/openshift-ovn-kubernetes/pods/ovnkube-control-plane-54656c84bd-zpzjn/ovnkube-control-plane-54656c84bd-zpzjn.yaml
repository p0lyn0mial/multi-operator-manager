---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
    networkoperator.openshift.io/hybrid-overlay-status: disabled
    networkoperator.openshift.io/ip-family-mode: single-stack
  creationTimestamp: "2024-10-24T13:02:28Z"
  generateName: ovnkube-control-plane-54656c84bd-
  labels:
    app: ovnkube-control-plane
    component: network
    kubernetes.io/os: linux
    openshift.io/component: network
    pod-template-hash: 54656c84bd
    type: infra
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:networkoperator.openshift.io/cluster-network-cidr: {}
          f:networkoperator.openshift.io/hybrid-overlay-status: {}
          f:networkoperator.openshift.io/ip-family-mode: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:component: {}
          f:kubernetes.io/os: {}
          f:openshift.io/component: {}
          f:pod-template-hash: {}
          f:type: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"c2f27cf5-a4fd-4b83-abaa-0567b1196b31"}: {}
      f:spec:
        f:containers:
          k:{"name":"kube-rbac-proxy"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9108,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
          k:{"name":"ovnkube-cluster-manager"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"K8S_NODE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":29108,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/env"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovnkube-config/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"env-overrides"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
              f:optional: {}
            f:name: {}
          k:{"name":"ovn-control-plane-metrics-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:optional: {}
              f:secretName: {}
          k:{"name":"ovnkube-config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2024-10-24T13:02:28Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.0.0.3"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2024-10-24T13:10:20Z"
  name: ovnkube-control-plane-54656c84bd-zpzjn
  namespace: openshift-ovn-kubernetes
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: ovnkube-control-plane-54656c84bd
    uid: c2f27cf5-a4fd-4b83-abaa-0567b1196b31
  resourceVersion: "16693"
  uid: aef2360e-1427-4bf7-93dd-e648f30cd931
spec:
  containers:
  - command:
    - /bin/bash
    - -c
    - |
      #!/bin/bash
      set -euo pipefail
      TLS_PK=/etc/pki/tls/metrics-cert/tls.key
      TLS_CERT=/etc/pki/tls/metrics-cert/tls.crt
      # As the secret mount is optional we must wait for the files to be present.
      # The service is created in monitor.yaml and this is created in sdn.yaml.
      TS=$(date +%s)
      WARN_TS=$(( ${TS} + $(( 20 * 60)) ))
      HAS_LOGGED_INFO=0

      log_missing_certs(){
          CUR_TS=$(date +%s)
          if [[ "${CUR_TS}" -gt "WARN_TS"  ]]; then
            echo $(date -Iseconds) WARN: ovn-control-plane-metrics-cert not mounted after 20 minutes.
          elif [[ "${HAS_LOGGED_INFO}" -eq 0 ]] ; then
            echo $(date -Iseconds) INFO: ovn-control-plane-metrics-cert not mounted. Waiting 20 minutes.
            HAS_LOGGED_INFO=1
          fi
      }
      while [[ ! -f "${TLS_PK}" ||  ! -f "${TLS_CERT}" ]] ; do
        log_missing_certs
        sleep 5
      done

      echo $(date -Iseconds) INFO: ovn-control-plane-metrics-certs mounted, starting kube-rbac-proxy
      exec /usr/bin/kube-rbac-proxy \
        --logtostderr \
        --secure-listen-address=:9108 \
        --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
        --upstream=http://127.0.0.1:29108/ \
        --tls-private-key-file=${TLS_PK} \
        --tls-cert-file=${TLS_CERT}
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy
    ports:
    - containerPort: 9108
      hostPort: 9108
      name: https
      protocol: TCP
    resources:
      requests:
        cpu: 10m
        memory: 20Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/pki/tls/metrics-cert
      name: ovn-control-plane-metrics-cert
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jrsb6
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - |
      set -xe
      if [[ -f "/env/_master" ]]; then
        set -o allexport
        source "/env/_master"
        set +o allexport
      fi

      ovn_v4_join_subnet_opt=
      if [[ "" != "" ]]; then
        ovn_v4_join_subnet_opt="--gateway-v4-join-subnet "
      fi
      ovn_v6_join_subnet_opt=
      if [[ "" != "" ]]; then
        ovn_v6_join_subnet_opt="--gateway-v6-join-subnet "
      fi

      ovn_v4_transit_switch_subnet_opt=
      if [[ "" != "" ]]; then
        ovn_v4_transit_switch_subnet_opt="--cluster-manager-v4-transit-switch-subnet "
      fi
      ovn_v6_transit_switch_subnet_opt=
      if [[ "" != "" ]]; then
        ovn_v6_transit_switch_subnet_opt="--cluster-manager-v6-transit-switch-subnet "
      fi

      dns_name_resolver_enabled_flag=
      if [[ "false" == "true" ]]; then
        dns_name_resolver_enabled_flag="--enable-dns-name-resolver"
      fi

      persistent_ips_enabled_flag=
      if [[ "false" == "true" ]]; then
        persistent_ips_enabled_flag="--enable-persistent-ips"
      fi

      # This is needed so that converting clusters from GA to TP
      # will rollout control plane pods as well
      network_segmentation_enabled_flag=
      multi_network_enabled_flag=
      if [[ "false" == "true" ]]; then
        multi_network_enabled_flag="--enable-multi-network"
        network_segmentation_enabled_flag="--enable-network-segmentation"
      fi

      echo "I$(date "+%m%d %H:%M:%S.%N") - ovnkube-control-plane - start ovnkube --init-cluster-manager ${K8S_NODE}"
      exec /usr/bin/ovnkube \
        --enable-interconnect \
        --init-cluster-manager "${K8S_NODE}" \
        --config-file=/run/ovnkube-config/ovnkube.conf \
        --loglevel "${OVN_KUBE_LOG_LEVEL}" \
        --metrics-bind-address "127.0.0.1:29108" \
        --metrics-enable-pprof \
        --metrics-enable-config-duration \
        ${ovn_v4_join_subnet_opt} \
        ${ovn_v6_join_subnet_opt} \
        ${ovn_v4_transit_switch_subnet_opt} \
        ${ovn_v6_transit_switch_subnet_opt} \
        ${dns_name_resolver_enabled_flag} \
        ${persistent_ips_enabled_flag} \
        ${multi_network_enabled_flag} \
        ${network_segmentation_enabled_flag}
    env:
    - name: OVN_KUBE_LOG_LEVEL
      value: "4"
    - name: K8S_NODE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
    imagePullPolicy: IfNotPresent
    name: ovnkube-cluster-manager
    ports:
    - containerPort: 29108
      hostPort: 29108
      name: metrics-port
      protocol: TCP
    resources:
      requests:
        cpu: 10m
        memory: 300Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /run/ovnkube-config/
      name: ovnkube-config
    - mountPath: /env
      name: env-overrides
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jrsb6
      readOnly: true
  dnsPolicy: Default
  enableServiceLinks: true
  hostNetwork: true
  nodeName: ci-op-2fcpj5j6-f6035-2lklf-master-0
  nodeSelector:
    kubernetes.io/os: linux
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: ovn-kubernetes-control-plane
  serviceAccountName: ovn-kubernetes-control-plane
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: node-role.kubernetes.io/master
    operator: Exists
  - key: node.kubernetes.io/not-ready
    operator: Exists
  - key: node.kubernetes.io/unreachable
    operator: Exists
  - key: node.kubernetes.io/network-unavailable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      name: ovnkube-config
    name: ovnkube-config
  - configMap:
      defaultMode: 420
      name: env-overrides
      optional: true
    name: env-overrides
  - name: ovn-control-plane-metrics-cert
    secret:
      defaultMode: 420
      optional: true
      secretName: ovn-control-plane-metrics-cert
  - name: kube-api-access-jrsb6
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:02:47Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:02:28Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:09:46Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:09:46Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-10-24T13:02:28Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://8c3a7ac6593d2829170e35888fde7b794658b5aaa56fd78bee0a9297239fbf8a
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:ff7b9d9ed505a6b67f38f5a8c628d4fd03bd136119e29ee42d8368ef33f23e87
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:38795c2c7e40968bb7758d62851c52ac25eb36c85f462481e64804699b9f6c0a
    lastState: {}
    name: kube-rbac-proxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-10-24T13:02:32Z"
    volumeMounts:
    - mountPath: /etc/pki/tls/metrics-cert
      name: ovn-control-plane-metrics-cert
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jrsb6
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: cri-o://6112adc7f8e0295b2ab45af6065d34d3bc46623d2579bff1c23d82995689b97b
    image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
    imageID: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:35d322662a4eeaba7375388ceb256f801355265a75433b867f99c2959a5e05db
    lastState:
      terminated:
        containerID: cri-o://7f5f1afd3074f9b42f18432fba1b37b236de4e8e372eb83093c62c7dca8a4a4b
        exitCode: 0
        finishedAt: "2024-10-24T13:09:45Z"
        reason: Completed
        startedAt: "2024-10-24T13:02:46Z"
    name: ovnkube-cluster-manager
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2024-10-24T13:09:45Z"
    volumeMounts:
    - mountPath: /run/ovnkube-config/
      name: ovnkube-config
    - mountPath: /env
      name: env-overrides
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-jrsb6
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 10.0.0.3
  hostIPs:
  - ip: 10.0.0.3
  phase: Running
  podIP: 10.0.0.3
  podIPs:
  - ip: 10.0.0.3
  qosClass: Burstable
  startTime: "2024-10-24T13:02:28Z"
