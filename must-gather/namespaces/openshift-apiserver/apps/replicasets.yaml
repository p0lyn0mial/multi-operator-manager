---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "4"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: SzU0bw==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: 96c589542191d8dd4090b4e319c48afcdc1961b9a6a5b249ff8796bd109e765e
    creationTimestamp: "2024-10-24T13:06:55Z"
    generation: 5
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 5d5579f445
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:25:53Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:25:53Z"
    name: apiserver-5d5579f445
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "27979"
    uid: 136fd96f-7681-4b5f-8920-d11f6855d3b8
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 5d5579f445
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "4"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: SzU0bw==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 5d5579f445
          revision: "1"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 5
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "2"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: S25TQA==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: 77b35e754e0e0ff8b85b86d2cc3cff3f9db3243e284a4f2ef2758154d220784d
    creationTimestamp: "2024-10-24T13:03:40Z"
    generation: 4
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 5f8dd75f5c
      revision: "0"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:04:59Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:04:59Z"
    name: apiserver-5f8dd75f5c
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "10687"
    uid: 8a9ff04c-de62-4d73-b985-94a001b94172
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 5f8dd75f5c
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "2"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: S25TQA==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 5f8dd75f5c
          revision: "0"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-0
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-0
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "10"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "8"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: fiyNtA==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: 831276643186e6cbf43152468f3d6d4c6d7880eff4b073a32c30b8aa0fb40b25
    creationTimestamp: "2024-10-24T13:53:23Z"
    generation: 4
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 6545b7bd68
      revision: "3"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:56:18Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:57:28Z"
    name: apiserver-6545b7bd68
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "41748"
    uid: f22d452b-bd70-4974-bb27-7e8ab16e3c0a
  spec:
    replicas: 3
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 6545b7bd68
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "8"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: fiyNtA==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 6545b7bd68
          revision: "3"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-3
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-3
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 4
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "9"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "8"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: fiyNtA==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: 29f4b0247d35364b654defde41b3a18575b55696f8115fdfffa9427563fff2fb
    creationTimestamp: "2024-10-24T13:46:52Z"
    generation: 7
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 678f64f7c9
      revision: "2"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:56:18Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:56:18Z"
    name: apiserver-678f64f7c9
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "41276"
    uid: a5fd6c83-67a7-463e-b2d3-1054395e37af
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 678f64f7c9
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "8"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: fiyNtA==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 678f64f7c9
          revision: "2"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-2
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-2
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 7
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "6"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "5"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: BZu5cA==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: 0fb02e68dcfb7477336c32638535141ac7bf90157ae8bc594bca6ffca2fe61a3
    creationTimestamp: "2024-10-24T13:21:56Z"
    generation: 3
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 67f7894794
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:22:00Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:22:00Z"
    name: apiserver-67f7894794
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "23582"
    uid: c9f2a977-7566-47db-bb90-41fc98556262
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 67f7894794
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "5"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: BZu5cA==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 67f7894794
          revision: "1"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "7"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "6"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: AcYRag==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: 7cdd79c9dd05219585431a17dde75a0f50d6e6343a2fa5d89d4e471fc6843746
    creationTimestamp: "2024-10-24T13:22:00Z"
    generation: 7
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 6d6946f85d
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:35:38Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:35:38Z"
    name: apiserver-6d6946f85d
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "33205"
    uid: ebbb6ed4-f5b6-4a83-8abd-d1f766376b1b
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 6d6946f85d
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "6"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: AcYRag==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 6d6946f85d
          revision: "1"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 7
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "5"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: BZu5cA==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: a316e01265e6e21cef9a72d240da2ebfd02ef9029e24b910aa8a962aab7e8255
    creationTimestamp: "2024-10-24T13:11:30Z"
    generation: 5
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 6d7dbc56c5
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:29:24Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:29:24Z"
    name: apiserver-6d7dbc56c5
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "30057"
    uid: 50a33e6f-2533-4a52-97ac-b7d4a4e13d5e
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 6d7dbc56c5
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "5"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: BZu5cA==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 6d7dbc56c5
          revision: "1"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 5
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "3"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: y63fdQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: 47ee7406f5345cdeb00f92b897f0d7f227f6fdf007ef60293a0a73b0b4832b99
    creationTimestamp: "2024-10-24T13:04:59Z"
    generation: 7
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 77d45ddc66
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:15:26Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:15:26Z"
    name: apiserver-77d45ddc66
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "19967"
    uid: 9517318b-0a0c-4291-a657-6bd9fdbaf41d
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 77d45ddc66
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "3"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: y63fdQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 77d45ddc66
          revision: "1"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 7
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "8"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "7"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: _fUbVg==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: b9da5c8cc23bb701d1f5b2c4561467c17492d08488211c028223588d8326d369
    creationTimestamp: "2024-10-24T13:30:28Z"
    generation: 7
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: 79fb6d9f75
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:50:54Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:50:54Z"
    name: apiserver-79fb6d9f75
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "39110"
    uid: 66fb8086-8870-4d32-ab8a-7455833a4367
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: 79fb6d9f75
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "7"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: _fUbVg==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: jGfYLg==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: 79fb6d9f75
          revision: "1"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 7
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:252cff0c140b9f16ee1902dedf2316ac40cb5b8bdb04bc8b75c84bf44daeda02
      openshiftapiservers.operator.openshift.io/pull-spec: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
      operator.openshift.io/dep-desired.generation: "2"
      operator.openshift.io/dep-openshift-apiserver.config.configmap: S25TQA==
      operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
      operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
      operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
      operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
      operator.openshift.io/spec-hash: cef4bcf0b506c6ab36b6657b14f9f74dca9856395efa5a8a77d23d7beaa44422
    creationTimestamp: "2024-10-24T13:03:44Z"
    generation: 5
    labels:
      apiserver: "true"
      app: openshift-apiserver-a
      openshift-apiserver-anti-affinity: "true"
      pod-template-hash: f67c66b4b
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:openshiftapiservers.operator.openshift.io/pull-spec: {}
            f:operator.openshift.io/dep-desired.generation: {}
            f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
            f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:openshift-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"440f97e0-c01e-4120-bf10-9f253cfc70a5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-desired.generation: {}
                f:operator.openshift.io/dep-openshift-apiserver.config.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: {}
                f:operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:openshift-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"openshift-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/kubelet/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/image-import-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-apiserver-check-endpoints"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":17698,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/openshift-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"image-import-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
                k:{"name":"node-pullsecrets"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-10-24T13:06:12Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-10-24T13:06:12Z"
    name: apiserver-f67c66b4b
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 440f97e0-c01e-4120-bf10-9f253cfc70a5
    resourceVersion: "12467"
    uid: f8aa6c13-a263-4e5d-8e66-73c9b111cf81
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-apiserver-a
        pod-template-hash: f67c66b4b
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-desired.generation: "2"
          operator.openshift.io/dep-openshift-apiserver.config.configmap: S25TQA==
          operator.openshift.io/dep-openshift-apiserver.etcd-client.secret: 3lKSoQ==
          operator.openshift.io/dep-openshift-apiserver.etcd-serving-ca.configmap: IDOTrg==
          operator.openshift.io/dep-openshift-apiserver.image-import-ca.configmap: OUXnWA==
          operator.openshift.io/dep-openshift-apiserver.trusted-ca-bundle.configmap: ElMHxA==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-apiserver-a
          openshift-apiserver-anti-affinity: "true"
          pod-template-hash: f67c66b4b
          revision: "1"
        name: openshift-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-apiserver-a
                  openshift-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec openshift-apiserver start --config=/var/run/configmaps/config/config.yaml -v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez?exclude=etcd
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: openshift-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: false
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: livez
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/lib/kubelet/
            name: node-pullsecrets
            readOnly: true
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/audit
            name: audit
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/image-import-ca
            name: image-import-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        - args:
          - --listen
          - 0.0.0.0:17698
          - --namespace
          - $(POD_NAMESPACE)
          - --v
          - "2"
          command:
          - cluster-kube-apiserver-operator
          - check-endpoints
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:adc55330a214af3a57e2fac059ed409c2a7b1dc54d829a3ad1f719ce6c15ffa0
          imagePullPolicy: IfNotPresent
          name: openshift-apiserver-check-endpoints
          ports:
          - containerPort: 17698
            name: check-endpoints
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/openshift-apiserver && touch /var/log/openshift-apiserver/audit.log
            && chmod 0600 /var/log/openshift-apiserver/*
          image: registry.build02.ci.openshift.org/ci-op-2fcpj5j6/stable@sha256:3bb0c7580e7044dd06a53e02ebb5d819447eeb88badd829a89757ccecf135cb4
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/openshift-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-apiserver-sa
        serviceAccountName: openshift-apiserver-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /var/lib/kubelet/
            type: Directory
          name: node-pullsecrets
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit
        - name: etcd-client
          secret:
            defaultMode: 384
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - configMap:
            defaultMode: 420
            name: image-import-ca
            optional: true
          name: image-import-ca
        - name: serving-cert
          secret:
            defaultMode: 384
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 384
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/openshift-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 5
    replicas: 0
kind: ReplicaSetList
metadata:
  resourceVersion: "61047"
